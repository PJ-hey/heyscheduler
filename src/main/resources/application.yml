spring:
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: ${profile}
    group:
      local:
        - common
      dev:
        - common
      prod:
        - common

---
spring:
  config:
    activate:
      on-profile: common
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      s3:
        bucket: hey-bucket
      region:
        static: ${AWS_REGION}
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
  web:
    locale: ko_KR
  main:
    allow-bean-definition-overriding: true

springdoc:
  default-produces-media-type: application/json
  writer-with-default-pretty-printer: true
  model-and-view-allowed: true
  swagger-ui:
    syntax-highlight:
      theme: tomorrow-night
    tags-sorter: alpha
    operations-sorter: method

jwt:
  secret: ${TOKEN_SECRET}
  access-expiration: 3600000
  refresh-expiration: 5184000000

management:
  endpoints:
    web:
      base-path: /health_check

client:
  kopis:
    api-key: ${KOPIS_API_KEY}
    url: ${KOPIS_API_URL}
  spotify:
    client-id: ${SPOTIFY_CLIENT_ID}
    client-secret: ${SPOTIFY_CLIENT_SECRET}

firebase:
  project-id: ${FIREBASE_ID}
  key-path: ${FIREBASE_KEY}

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://ec2-3-39-168-47.ap-northeast-2.compute.amazonaws.com:5432/hey
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
  data:
    redis:
      host: localhost
      port: 6379
  task:
    execution:
      pool:
        core-size: 10
server:
  port: 8180
logging:
  level:
    root: info
    org.springframework.web: debug
    jdbc:
      sqlonly: off
      sqltiming: debug
      audit: off
      resultset: off
      resultsettable: debug
      connection: off

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://ec2-3-39-168-47.ap-northeast-2.compute.amazonaws.com:5432/hey
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
  data:
    redis:
      host: localhost
      port: 6379
  task:
    execution:
      pool:
        core-size: 2
server:
  port: 8190
logging:
  level:
    root: info
    org.springframework.web: debug
    jdbc:
      sqlonly: off
      sqltiming: debug
      audit: off
      resultset: off
      resultsettable: debug
      connection: off

---
#spring.config.active.on-profile: prod
#
#spring:
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://localhost:5432/hey
#    username: ${SPRING_DATASOURCE_USERNAME}
#    password: ${SPRING_DATASOURCE_PASSWORD}
#
#  data:
#    redis:
#      host: redis
#      port: 6379
#
#  jpa:
#    hibernate:
#      ddl-auto: update
#      format_sql: true
#    show-sql: true
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
